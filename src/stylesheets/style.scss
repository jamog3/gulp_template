@charset "utf-8";

// @include notxt;
@mixin notxt {
  overflow: hidden;
  white-space: nowrap;
  text-indent: 100%;
}
//  @include clear;
@mixin clear {
  &:after {
    display: block;
    clear: both;
    content: '';
  }
}
//  @include ov;
@mixin ov {
  transition: opacity 0.2s linear;
  opacity: 1;
  &:hover {
    cursor: pointer;
    opacity: 0.5;
  }
}

$color: #0e100f;
$linkcolor: #008cd9;
$hovercolor: #008cd9;
$ls: 0.1em;
$minw: 950px;
$MDMotion: cubic-bezier(.55,0,.1,1);
// media querys
$spWidth: 640px;

// include
@import '_partial/normalize';
@import '_partial/sprites';
@import '_partial/base';

// retina
// @include sprite($***);
@mixin r-sprite-width($sprite) {
  width: nth($sprite, 5)/2;
}

@mixin r-sprite-height($sprite) {
  height: nth($sprite, 6)/2;
}
@mixin r-sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3)/2;
  $sprite-offset-y: nth($sprite, 4)/2;
  background-position: $sprite-offset-x $sprite-offset-y;
}
@mixin r-sprite-size($sprite) {
  background-size: nth($sprite, 7)/2 nth($sprite, 8)/2;
}
@mixin r-sprite($sprite) {
  @include sprite-image($sprite);
  @include r-sprite-position($sprite);
  @include r-sprite-width($sprite);
  @include r-sprite-height($sprite);
  @include r-sprite-size($sprite);
}

// media queries
@mixin max-screen($break-point) {
  @media screen and (max-width: $break-point) {
    @content;
  }
}
@mixin min-screen($break-point) {
  @media screen and (min-width: $break-point) {
    @content;
  }
}
@mixin screen($break-point-min, $break-point-max) {
  @media screen and (min-width: $break-point-min) and (max-width: $break-point-max) {
    @content;
  }
}
// .hoge {
//   font-size: 20px;
//   @include max-screen($spWidth) {
//     font-size: 18px;
//   }
// }

//
.hoge {
  padding: 10px;
  color: #FFF;
  display: flex;
  @include sprite($sample2);
}
.hoge2 {
  display: flex;
}
.hoge3 {
  display: flex;
}
.hoge4 {
  display: flex;
}
.hoge5 {
  display: flex;
}
